#!/usr/bin/python
import socket
import sys
import json

LOCO_HOST = 'localhost'
LOCO_PORT = 4206
LOCO_HEADER_DELIMITER = '\n'

class LocoError(Exception):
    pass

class LocoClient(object):
    def __init__(self):
        self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    def __del__(self):
        self.socket.close()

    def send_request(self, request_file_contents):
        self.request_headers = {}
        self.socket.sendall(json.dumps(self.request_headers) +
            LOCO_HEADER_DELIMITER +
            request_file_contents)

        self.raw_response = self.socket.recv(65536)

    def parse_response(self):
        s = self.raw_response.split(LOCO_HEADER_DELIMITER)
        self.response_headers = json.loads(s[0])
        self.response_file_contents = '\n'.join(s[1:])

    def main(self):
        if len(sys.argv) < 2:
            raise LocoError('Please specify a filename to edit')

        try:
            with open(sys.argv[1], 'rb') as f:
                initial_file_contents = f.read(65535)
        except IOError:
            raise LocoError('File does not exist or is directory: {0}'.format(sys.argv[1]))

        try:
            self.socket.connect((LOCO_HOST, LOCO_PORT))
        except socket.error, e:
            if e.errno == 111: raise LocoError('Connection to server refused')
            else             : raise e

        self.send_request(initial_file_contents)
        self.parse_response()

        if self.response_headers['success'] == False:
            raise LocoError(self.response_headers['error_text'])

        with open(sys.argv[1], 'wb') as f:
            f.write(self.response_file_contents)
            f.flush()

if __name__ == '__main__':
    try:
        LocoClient().main()
    except LocoError, e:
        print 'fatal: ' + str(e)