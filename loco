#!/usr/bin/python
import socket
import sys
import os
import json
import optparse

LOCO_HOST = 'localhost'
LOCO_PORT = 4206
LOCO_HEADER_DELIMITER = '\n'
LOCO_VERSION = '0.1'

class LocoError(Exception):
    pass

class LocoClient(object):
    def __init__(self):
        self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.op = optparse.OptionParser(usage='%prog [options] <filename>', 
                                        version='%prog ' + LOCO_VERSION)
        self.op.add_option('-e',
                           '--editor',
                           dest='editor',
                           help='open EDITOR rather than the default')

    def __del__(self):
        self.socket.close()

    def send_request(self, request_file_contents, editor_override):
        self.request_headers = {}

        if editor_override:
            self.request_headers['editor'] = editor_override

        self.socket.sendall(json.dumps(self.request_headers) +
            LOCO_HEADER_DELIMITER +
            request_file_contents)

        self.raw_response = self.socket.recv(65536)

    def parse_response(self):
        s = self.raw_response.split(LOCO_HEADER_DELIMITER)
        self.response_headers = json.loads(s[0])
        self.response_file_contents = '\n'.join(s[1:])

    def main(self):
        options, args = self.op.parse_args()

        try              : filename = args[0]
        except IndexError: raise LocoError('Please specify a filename to edit')

        if os.access(filename, os.F_OK) == True and os.access(filename, os.W_OK) == False:
            raise LocoError('File exists but you do not have permission to write to it: {0}'.format(filename))

        try:
            with open(filename, 'rb') as f:
                initial_file_contents = f.read(65535)
        except IOError:
            raise LocoError('File does not exist or is not readable: {0}'.format(filename))

        try:
            self.socket.connect((LOCO_HOST, LOCO_PORT))
        except socket.error, e:
            if e.errno == 111: raise LocoError('Connection to server refused')
            else             : raise e

        self.send_request(initial_file_contents, options.editor)
        self.parse_response()

        if self.response_headers['success'] == False:
            raise LocoError(self.response_headers['error_text'])

        with open(filename, 'wb') as f:
            f.write(self.response_file_contents)
            f.flush()

if __name__ == '__main__':
    try:
        LocoClient().main()
    except LocoError, e:
        print 'fatal: ' + str(e)